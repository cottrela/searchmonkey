/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.embeddediq.searchmonkey;

import java.io.File;
import java.io.IOException;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.regex.MatchResult;
import javax.swing.text.StyledDocument;
import org.apache.commons.io.FileUtils;
import org.apache.commons.io.FilenameUtils;
import org.apache.commons.io.LineIterator;

/**
 *
 * @author adam
 */
public class SearchMatchView extends javax.swing.JPanel {

    /**
     * Creates new form SearchMatchView
     */
    public SearchMatchView() {
        initComponents();
    }

    /**
     *
     * @param file
     * @param match
     * @throws IOException
     */
    public void updateView(File file, ContentMatch match) throws IOException 
    {
        StyledDocument doc = jTextPane1.getStyledDocument();
        jTextPane1.setContentType("text/html");
        jTextPane1.setText("<html>"
                + "<head><title>boo</title></head>"
                + "<body></body>"
                + "</html>"); // Clear document
        //String path = FilenameUtils.concat();
        // File file = Paths.get(match.pathName, match.fileName).toFile();
        //File file = new File();
        //Path file = FilenameUtils.getPath(path);
        LineIterator lineIterator = FileUtils.lineIterator(file);
        try
        {
            int i = 0;
            while (lineIterator.hasNext())
            {
                String line = lineIterator.nextLine();
                i ++;
                MatchResult res = match.getMatch(line);
                if (res != null)
                {
                    line = "Line " + i + ": " + line;
                    doc.insertString(doc.getLength(), line, doc.getStyle(line));
                    res.start(), res.end()  
                }
                // 
            }
        } finally {
            lineIterator.close();
        }

        match.fileName
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane3 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();

        jScrollPane3.setViewportView(jTextPane1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 441, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 249, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextPane jTextPane1;
    // End of variables declaration//GEN-END:variables
}
